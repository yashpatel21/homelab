# =============================================================================
# AUTHENTIK SSO INFRASTRUCTURE - DOCKER COMPOSE CONFIGURATION
# =============================================================================
# Complete authentication infrastructure with PostgreSQL, Redis, and Authentik
# Generated by Ansible on {{ ansible_date_time.iso8601 }}
# =============================================================================


services:
  # ===========================================================================
  # POSTGRESQL DATABASE
  # ===========================================================================
  authentik_postgresql:
    image: postgres:16-alpine
    container_name: authentik_postgresql
    hostname: authentik_postgresql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{ vault_authentik_postgres_username | default('authentik') }}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    environment:
      POSTGRES_PASSWORD: "{{ vault_authentik_postgres_password }}"
      POSTGRES_USER: "{{ vault_authentik_postgres_username | default('authentik') }}"
      POSTGRES_DB: "{{ vault_authentik_postgres_database | default('authentik') }}"
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - "{{ data_directory }}/{{ authentik_service_name }}/postgresql:/var/lib/postgresql/data"
    networks:
      - homelab
    labels:
      # Watchtower automatic updates
      - "com.centurylinklabs.watchtower.enable=true"
      # Database backup labels
      - "backup.enable=true"
      - "backup.type=postgresql"

  # ===========================================================================
  # REDIS CACHE
  # ===========================================================================
  authentik_redis:
    image: redis:7-alpine
    container_name: authentik_redis
    hostname: authentik_redis
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    volumes:
      - "{{ data_directory }}/{{ authentik_service_name }}/redis:/data"
    networks:
      - homelab
    labels:
      # Watchtower automatic updates
      - "com.centurylinklabs.watchtower.enable=true"

  # ===========================================================================
  # AUTHENTIK SERVER
  # ===========================================================================
  authentik_server:
    image: ghcr.io/goauthentik/server:2025.6.4
    container_name: authentik_server
    hostname: authentik_server
    restart: unless-stopped
    command: server
    environment:
      # Database Configuration
      AUTHENTIK_POSTGRESQL__HOST: authentik_postgresql
      AUTHENTIK_POSTGRESQL__USER: "{{ vault_authentik_postgres_username | default('authentik') }}"
      AUTHENTIK_POSTGRESQL__NAME: "{{ vault_authentik_postgres_database | default('authentik') }}"
      AUTHENTIK_POSTGRESQL__PASSWORD: "{{ vault_authentik_postgres_password }}"
      
      # Redis Configuration
      AUTHENTIK_REDIS__HOST: authentik_redis
      
      # Core Authentik Configuration
      AUTHENTIK_SECRET_KEY: "{{ vault_authentik_secret_key }}"
      AUTHENTIK_ERROR_REPORTING__ENABLED: "false"
      AUTHENTIK_DISABLE_UPDATE_CHECK: "true"
      AUTHENTIK_DISABLE_STARTUP_ANALYTICS: "true"
      
      # Web Configuration
      AUTHENTIK_LISTEN__HTTP: "0.0.0.0:9000"
      AUTHENTIK_LISTEN__HTTPS: "0.0.0.0:9443"
      
      # Trust proxy headers for proper IP detection
      AUTHENTIK_WEB__TRUSTED_PROXIES: "172.20.0.0/16,{{ ubuntu_server_ip }}/32"
      
      # Email Configuration for password recovery and notifications
{% if vault_authentik_email_host is defined and vault_authentik_email_username is defined and vault_authentik_email_password is defined %}
      AUTHENTIK_EMAIL__HOST: "{{ vault_authentik_email_host }}"
      AUTHENTIK_EMAIL__PORT: "{{ vault_authentik_email_port | default('587') }}"
      AUTHENTIK_EMAIL__USERNAME: "{{ vault_authentik_email_username }}"
      AUTHENTIK_EMAIL__PASSWORD: "{{ vault_authentik_email_password }}"
      AUTHENTIK_EMAIL__USE_TLS: "true"
      AUTHENTIK_EMAIL__USE_SSL: "false"
      AUTHENTIK_EMAIL__FROM: "authentik@{{ base_domain }}"
{% endif %}
      
      # Logging Configuration
      AUTHENTIK_LOG_LEVEL: "info"
      
      # Session Configuration
      AUTHENTIK_COOKIE_DOMAIN: ".{{ base_domain }}"
      
    volumes:
      - "{{ data_directory }}/{{ authentik_service_name }}/media:/media"
      - "{{ data_directory }}/{{ authentik_service_name }}/certs:/certs"
      - "{{ data_directory }}/{{ authentik_service_name }}/custom-templates:/templates"
    ports:
      # Internal ports for container communication
      - "127.0.0.1:9000:9000"  # HTTP (for Traefik forward auth)
      - "127.0.0.1:9443:9443"  # HTTPS (internal)
    networks:
      - homelab
    depends_on:
      authentik_postgresql:
        condition: service_healthy
      authentik_redis:
        condition: service_healthy
    labels:
      # Traefik reverse proxy configuration
      - "traefik.enable=true"
      
      # Main Authentik interface
      - "traefik.http.routers.authentik.rule=Host(`auth.{{ base_domain }}`)"
      - "traefik.http.routers.authentik.entrypoints=websecure"
      - "traefik.http.routers.authentik.tls.certresolver={{ ssl_cert_resolver }}"
      - "traefik.http.routers.authentik.service=authentik"
      - "traefik.http.services.authentik.loadbalancer.server.port=9000"
      
      # Authentik outpost (for forward auth)
      - "traefik.http.routers.authentik-outpost.rule=Host(`auth.{{ base_domain }}`) || HostRegexp(`{subdomain:[a-z0-9-]+}.{{ base_domain }}`) && PathPrefix(`/outpost.goauthentik.io/`)"
      - "traefik.http.routers.authentik-outpost.entrypoints=websecure"
      - "traefik.http.routers.authentik-outpost.tls.certresolver={{ ssl_cert_resolver }}"
      - "traefik.http.routers.authentik-outpost.service=authentik-outpost"
      - "traefik.http.services.authentik-outpost.loadbalancer.server.port=9000"
      
      # Watchtower automatic updates
      - "com.centurylinklabs.watchtower.enable=true"

  # ===========================================================================
  # AUTHENTIK WORKER
  # ===========================================================================
  authentik_worker:
    image: ghcr.io/goauthentik/server:2025.6.4
    container_name: authentik_worker
    hostname: authentik_worker
    restart: unless-stopped
    command: worker
    user: root
    environment:
      # Database Configuration (same as server)
      AUTHENTIK_POSTGRESQL__HOST: authentik_postgresql
      AUTHENTIK_POSTGRESQL__USER: "{{ vault_authentik_postgres_username | default('authentik') }}"
      AUTHENTIK_POSTGRESQL__NAME: "{{ vault_authentik_postgres_database | default('authentik') }}"
      AUTHENTIK_POSTGRESQL__PASSWORD: "{{ vault_authentik_postgres_password }}"
      
      # Redis Configuration (same as server)
      AUTHENTIK_REDIS__HOST: authentik_redis
      
      # Core Configuration (same as server)
      AUTHENTIK_SECRET_KEY: "{{ vault_authentik_secret_key }}"
      AUTHENTIK_ERROR_REPORTING__ENABLED: "false"
      AUTHENTIK_DISABLE_UPDATE_CHECK: "true"
      AUTHENTIK_DISABLE_STARTUP_ANALYTICS: "true"

      # Email Configuration for password recovery and notifications
{% if vault_authentik_email_host is defined and vault_authentik_email_username is defined and vault_authentik_email_password is defined %}
      AUTHENTIK_EMAIL__HOST: "{{ vault_authentik_email_host }}"
      AUTHENTIK_EMAIL__PORT: "{{ vault_authentik_email_port | default('587') }}"
      AUTHENTIK_EMAIL__USERNAME: "{{ vault_authentik_email_username }}"
      AUTHENTIK_EMAIL__PASSWORD: "{{ vault_authentik_email_password }}"
      AUTHENTIK_EMAIL__USE_TLS: "true"
      AUTHENTIK_EMAIL__USE_SSL: "false"
      AUTHENTIK_EMAIL__FROM: "authentik@{{ base_domain }}"
{% endif %}      
      
      # Logging Configuration
      AUTHENTIK_LOG_LEVEL: "info"
      
    volumes:
      # Docker socket for container management (optional but recommended)
      - /var/run/docker.sock:/var/run/docker.sock
      # Shared volumes with server
      - "{{ data_directory }}/{{ authentik_service_name }}/media:/media"
      - "{{ data_directory }}/{{ authentik_service_name }}/certs:/certs"
      - "{{ data_directory }}/{{ authentik_service_name }}/custom-templates:/templates"
    networks:
      - homelab
    depends_on:
      authentik_postgresql:
        condition: service_healthy
      authentik_redis:
        condition: service_healthy
    labels:
      # Watchtower automatic updates
      - "com.centurylinklabs.watchtower.enable=true"

# =============================================================================
# NETWORKS
# =============================================================================
networks:
  homelab:
    external: true

# =============================================================================
# SERVICE INFORMATION
# =============================================================================
# 
# Access URLs:
# - Authentik: https://auth.{{ base_domain }}
# - Initial Setup: https://auth.{{ base_domain }}/if/flow/initial-setup/
# 
# Admin Setup:
# - Visit the Initial Setup URL above to create your admin user and password
# - Complete the setup wizard to configure Authentik
# 
# Container Network Communication:
# - Authentik Server: authentik_server:9000 (for Traefik forward auth)
# - PostgreSQL: authentik_postgresql:5432
# - Redis: authentik_redis:6379
# 
# ============================================================================= 