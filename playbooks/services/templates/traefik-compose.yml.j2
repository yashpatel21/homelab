---
# =============================================================================
# Traefik Reverse Proxy with SSL Automation
# =============================================================================
# 
# This Docker Compose file deploys Traefik reverse proxy with:
# - Let's Encrypt SSL certificates via Cloudflare DNS challenge
# - Traefik dashboard with SSL
# - Whoami test service for SSL verification
# - WUD labels for update notifications
#
# Generated from Ansible template: traefik-compose.yml.j2
# =============================================================================

services:
  traefik:
    image: traefik:v3.5.0
    container_name: "traefik"
    restart: unless-stopped
    command:
      # API Configuration
      - "--api.insecure=true"
      - "--api.dashboard=true"
      
      # Docker Provider
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      
      # File Provider for Dynamic Configuration
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      
      # Entry Points
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      
      # Let's Encrypt Configuration
      - "--certificatesresolvers.{{ ssl_cert_resolver }}.acme.dnschallenge=true"
      - "--certificatesresolvers.{{ ssl_cert_resolver }}.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.{{ ssl_cert_resolver }}.acme.email={{ vault_letsencrypt_email }}"
      - "--certificatesresolvers.{{ ssl_cert_resolver }}.acme.storage=/letsencrypt/acme.json"
      
      # DNS Challenge Configuration
      - "--certificatesresolvers.{{ ssl_cert_resolver }}.acme.dnschallenge.delaybeforecheck=30"
      - "--certificatesresolvers.{{ ssl_cert_resolver }}.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
      
      # Uncomment for testing with staging certificates
      # - "--certificatesresolvers.{{ ssl_cert_resolver }}.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      
      # Uncomment for debug logging
      # - "--log.level=DEBUG"
      
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    
    environment:
      # Cloudflare API Configuration
      - "CF_DNS_API_TOKEN={{ vault_cloudflare_api_token }}"
      - "CF_ZONE_API_TOKEN={{ vault_cloudflare_api_token }}"
    
    volumes:
      # SSL certificates storage
      - "{{ data_directory }}/traefik/acme:/letsencrypt"
      # Docker socket for service discovery
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      # Dynamic configuration files
      - "{{ data_directory }}/traefik/dynamic:/etc/traefik/dynamic:ro"
    
    networks:
      - {{ homelab_network_name }}
    
    labels:
      # WUD update notifications - Major/Minor only with semantic versioning
      - "wud.watch=true"
      - "wud.tag.include=^v\\d+\\.\\d+\\.\\d+$"
      - "wud.tag.exclude=alpha|beta|rc|dev"
      - "wud.tag.transform=^v?(\\d+\\.\\d+\\.\\d+).*$ => $1"
      - "wud.trigger.include=command.ntfy"
      - "wud.display.name=Traefik Reverse Proxy"
      - "wud.link.template=https://github.com/traefik/traefik/releases/tag/$${raw}"
      
      # Traefik dashboard routing
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.{{ base_domain }}`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver={{ ssl_cert_resolver }}"
{% if auth_enabled | default(false) %}
      # Forward authentication to Authentik for dashboard access
      - "traefik.http.routers.dashboard.middlewares=authentik@file"
      - "traefik.http.routers.dashboard.priority=10"
      
      - "traefik.http.routers.authentik-outpost.rule=Host(`auth.{{ base_domain }}`) || HostRegexp(`{subdomain:[a-z0-9-]+}.{{ base_domain }}`) && PathPrefix(`/outpost.goauthentik.io/`)"
      - "traefik.http.routers.authentik-outpost.entrypoints=websecure"
      - "traefik.http.routers.authentik-outpost.tls.certresolver={{ ssl_cert_resolver }}"
      - "traefik.http.routers.authentik-outpost.priority=100"
      - "traefik.http.routers.authentik-outpost.service=authentik-outpost"
      - "traefik.http.services.authentik-outpost.loadbalancer.server.port=9000"
{% else %}
      - "traefik.http.routers.dashboard.priority=10"
{% endif %}
      - "traefik.http.routers.dashboard.service=api@internal"

  whoami:
    image: traefik/whoami:v1.11.0
    container_name: "whoami"
    restart: unless-stopped
    
    networks:
      - {{ homelab_network_name }}
    
    labels:
      # WUD update notifications - Major/Minor only with semantic versioning
      - "wud.watch=true"
      - "wud.tag.include=^v\\d+\\.\\d+\\.\\d+$"
      - "wud.tag.exclude=alpha|beta|rc|dev"
      - "wud.tag.transform=^v?(\\d+\\.\\d+\\.\\d+).*$ => $1"
      - "wud.trigger.include=command.ntfy"
      - "wud.display.name=Traefik Whoami"
      - "wud.link.template=https://github.com/traefik/whoami/releases/tag/$${raw}"
      
      # Traefik routing configuration
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.{{ base_domain }}`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver={{ ssl_cert_resolver }}"
{% if auth_enabled | default(false) %}
      # Forward authentication to Authentik for SSL test service access
      - "traefik.http.routers.whoami.middlewares=authentik@file"
{% endif %}

networks:
  {{ homelab_network_name }}:
    external: true 